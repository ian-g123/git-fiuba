{"message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":1053,"byte_end":1054,"line_start":47,"line_end":47,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    fn new(args: &[String], output) -> Result<Self, ErrorFlags> {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":1053,"byte_end":1053,"line_start":47,"line_end":47,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    fn new(args: &[String], output) -> Result<Self, ErrorFlags> {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":": TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":1047,"byte_end":1047,"line_start":47,"line_end":47,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    fn new(args: &[String], output) -> Result<Self, ErrorFlags> {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/commands/hash_object_components/hash_object.rs:47:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn new(args: &[String], output) -> Result<Self, ErrorFlags> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn new(args: &[String], output\u001b[0m\u001b[0m\u001b[38;5;10m: TypeName\u001b[0m\u001b[0m) -> Result<Self, ErrorFlags> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn new(args: &[String], \u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0moutput) -> Result<Self, ErrorFlags> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"unresolved import `sha1`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":71,"byte_end":75,"line_start":5,"line_end":5,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use sha1::{Digest, Sha1};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `sha1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `sha1`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/commands/hash_object_components/hash_object.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse sha1::{Digest, Sha1};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `sha1`\u001b[0m\n\n"}
{"message":"cannot find value `output` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":617,"byte_end":623,"line_start":28,"line_end":28,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"        let Ok(instance) = Self::new(args, output) else {","highlight_start":44,"highlight_end":50}],"label":"a field by this name exists in `Self`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `output` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/commands/hash_object_components/hash_object.rs:28:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let Ok(instance) = Self::new(args, output) else {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9ma field by this name exists in `Self`\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":52,"byte_end":56,"line_start":3,"line_end":3,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":52,"byte_end":58,"line_start":3,"line_end":3,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/commands/hash_object_components/hash_object.rs:3:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"the placeholder `_` is not allowed within types on item signatures for functions","code":{"code":"E0121","explanation":"The type placeholder `_` was used within a type on an item's signature.\n\nErroneous code example:\n\n```compile_fail,E0121\nfn foo() -> _ { 5 } // error\n\nstatic BAR: _ = \"test\"; // error\n```\n\nIn those cases, you need to provide the type explicitly:\n\n```\nfn foo() -> i32 { 5 } // ok!\n\nstatic BAR: &str = \"test\"; // ok!\n```\n\nThe type placeholder `_` can be used outside item's signature as follows:\n\n```\nlet x = \"a4a\".split('4')\n    .collect::<Vec<_>>(); // No need to precise the Vec's generic type.\n```\n"},"level":"error","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":453,"byte_end":454,"line_start":22,"line_end":22,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"    fn run(name: &str, args: &[String]) -> Result<_, ErrorFlags> {","highlight_start":51,"highlight_end":52}],"label":"not allowed in type signatures","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use type parameters instead","code":null,"level":"help","spans":[{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":413,"byte_end":413,"line_start":22,"line_end":22,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    fn run(name: &str, args: &[String]) -> Result<_, ErrorFlags> {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"<T>","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/commands/hash_object_components/hash_object.rs","byte_start":453,"byte_end":454,"line_start":22,"line_end":22,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"    fn run(name: &str, args: &[String]) -> Result<_, ErrorFlags> {","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"T","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0121]\u001b[0m\u001b[0m\u001b[1m: the placeholder `_` is not allowed within types on item signatures for functions\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/commands/hash_object_components/hash_object.rs:22:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn run(name: &str, args: &[String]) -> Result<_, ErrorFlags> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot allowed in type signatures\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use type parameters instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn run\u001b[0m\u001b[0m\u001b[38;5;10m<T>\u001b[0m\u001b[0m(name: &str, args: &[String]) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10mT\u001b[0m\u001b[0m, ErrorFlags> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0121, E0425, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0121, E0425, E0432.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0121`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0121`.\u001b[0m\n"}
